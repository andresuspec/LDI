"""
Django settings for lineamientos project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g+y#p1ju^t^qs9q&l-t)-@(%9het(-s#@0!l4whce-*k(#oer4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False") == "True"

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost").split(",")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "social_django",
    "widget_tweaks",
    "users",
    "core",
    'templates_project',
    'planimetries',
    'zones',
    'buildings',
    'viewer',
]

AUTH_USER_MODEL = "users.User"

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/home/'
LOGOUT_REDIRECT_URL = '/login/'
SOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'

SOCIAL_AUTH_REDIRECT_IS_HTTPS = False
SOCIAL_AUTH_URL_NAMESPACE = "social"
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True

SOCIAL_AUTH_GOOGLE_OAUTH2_USE_UNIQUE_USER_ID = True
SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]
SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['email', 'first_name', 'last_name']

SOCIAL_AUTH_USER_FIELDS = ['email', 'first_name', 'last_name']
SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email', 'role', 'first_name', 'last_name']
SOCIAL_AUTH_CLEAN_USERNAME_FUNCTION = 'social_core.utils.slugify'

# Credenciales de Google
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY', 'social_google')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET', 'social_google')
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI")

# Pipelines personalizados
SOCIAL_AUTH_PIPELINE = (
    "social_core.pipeline.social_auth.social_details",
    "social_core.pipeline.social_auth.social_uid",
    "social_core.pipeline.social_auth.auth_allowed",
    "social_core.pipeline.social_auth.social_user",
    'social_core.pipeline.user.get_username',
    "users.pipeline.validate_uspec_user",
    "users.pipeline.create_user_with_email",
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    "users.pipeline.sync_user_role",
    "social_core.pipeline.user.user_details",
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "core.middleware.LoginRequiredMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lineamientos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lineamientos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MAIN_MYSQL_DATABASE', 'USPEC_RRHH'),
        'USER': os.getenv('MAIN_MYSQL_USER', 'uspecUser'),
        'PASSWORD': os.getenv('MAIN_MYSQL_PASSWORD', '12qwaszx'),
        'HOST': os.getenv('MAIN_MYSQL_HOST', 'db'),
        'PORT': os.getenv('MAIN_MYSQL_PORT', '3306'),
    },
    'especaps': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('USPECAPS_DATABASE', 'USPEC_RRHH'),
        'USER': os.getenv('USPECAPS_USER', 'uspecUser'),
        'PASSWORD': os.getenv('USPECAPS_PASSWORD', '12qwaszx'),
        'HOST': os.getenv('USPECAPS_HOST', 'db'),
        'PORT': os.getenv('USPECAPS_PORT', '3306'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

PROJECT_ROOT = BASE_DIR.parent                     # apunta a app/

STATIC_URL = "/static/"

STATICFILES_DIRS = [
    PROJECT_ROOT / "static_build",  # salida de Webpack
    PROJECT_ROOT / "static",        # archivos manuales
]

STATIC_ROOT = PROJECT_ROOT / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = PROJECT_ROOT / "media"


FORGE_CLIENT_ID = os.getenv("FORGE_CLIENT_ID")
FORGE_CLIENT_SECRET = os.getenv("FORGE_CLIENT_SECRET")
FORGE_BUCKET_KEY = os.getenv("FORGE_BUCKET_KEY")
FORGE_REGION = os.getenv("FORGE_REGION")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'social_django': {'handlers': ['console'], 'level': 'DEBUG'},
        'social': {'handlers': ['console'], 'level': 'DEBUG'},
        'users.pipeline': {'handlers': ['console'], 'level': 'DEBUG'},
        'django': {'handlers': ['console'], 'level': 'INFO'},
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
